---
# Deploy App

- hosts: localhost
  connection: local
  remote_user: centos
  become: true
  become_user: root
  gather_facts: yes
  roles:
    - centos

  name: ami-build
  vars_files: 
    - "environments/{{ env }}/{{ env }}.yml"

  tasks:
  
  - name: gather remote facts
    ec2_remote_facts:
      region: us-east-1
      filters:
        instance-state-name: running
        "tag:APP": "{{ MACHINE }}"
      aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
      aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    register: ec2_facts

  - debug: var=ec2_facts
 
  - name: Refresh EC2 cache
    become_user: centos 
    shell: /etc/ansible/hosts/ec2.py --refresh-cache

  - name: refresh inventory
    meta: refresh_inventory


- hosts: tag_APP_{{ MACHINE }}
  remote_user: centos
  become: true
  become_user: root
  gather_facts: yes
  vars_files:
    - "environments/{{ env }}/{{ env }}.yml"

  roles:
    - yum-repo
    - ruby 
    - geerlingguy.nodejs
    - mysql
    - { role: java, when: env == 'test-app' }
    - memcached
    - redis
    - app
    - sumologic
    - passenger
    - slack_msg

  pre_tasks:

  - name: reboot server
    include: tasks/reboot.yml

  - name: Install the MySQL repo.
    yum:
      name: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
      state: present
    when: env == 'dev' or env == 'test-app'
    tags: local_db

  - name: Create  mariadb log directory
    file:
      path: /var/log/mariadb
      state: directory
      mode: 0755
    when: env == 'dev' or env == 'test-app'
    tags: local_db

  - name: Install the MySQL repo.
    yum:
      name: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
      state: present
    when: env == 'dev' or env == 'test-app'
    tags: local_db

  - name: Override variables for MySQL (RedHat).
    set_fact:
      mysql_daemon: mysqld
      mysql_packages: ['mysql-server', 'mysql-devel','mysql']
      mysql_log_error: ""
      mysql_syslog_tag: mysqld
      mysql_pid_file: /var/run/mysqld/mysqld.pid
      mysql_socket: /var/lib/mysql/mysql.sock
      mysql_root_password_update: yes
      mysql_root_password: "root"
      mysql_databases:
        - name: test
      mysql_users:
        - name: root
          host: localhost
          password: "{{ lookup('env','MYSQL_ROOT_PASSWORD') }}"
          priv: "*.*:ALL"
    when: env == 'dev'
    tags: local_db
 
  - name: Override variables for MySQL (RedHat) for  {{ env }}.
    set_fact:
      mysql_daemon: mysqld
      mysql_packages: ['mysql-server', 'mysql-devel','mysql']
      mysql_log_error: ""
      mysql_syslog_tag: mysqld
      mysql_pid_file: /var/run/mysqld/mysqld.pid
      mysql_socket: /var/lib/mysql/mysql.sock
      mysql_root_password_update: yes
      mysql_root_password: "{{ lookup('env','MYSQL_ROOT_PASSWORD') }}"
      mysql_databases:
        - name: testapp
      mysql_users:
        - name: appuser
          host: localhost
          password: "{{ lookup('env','APPUSER_PASSWORD') }}"
          priv: "testapp.*:ALL"
    when: env == 'test-app'
    tags: local_db

  tasks:
  - name: refresh inventory
    meta: refresh_inventory
